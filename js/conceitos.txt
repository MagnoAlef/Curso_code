O que e Js?
    Criado em 1995, seu nome oficial e ECMAScript e uma linguagem de alto nivel e interpretada,
    multiparadigma.
    Principal linguagem de programação usada nos navegadores.
    Junto com html e css forma as tres principais tecnologias da web.
Tipos primitivos Js.
    Number e bigint 
    string
    boolean
    null e underfined
Objetos e funções.
    Objeto conjunto de varias informações, permitir armazenar varias valores diferentes
    Funções executam um procedimento
Variaveis.
    Servem para armazenar os dados para podermos usa-los no nosso codigo
    Boas praticas, sempre da nomes significativos para variaveis.
Operadores e expressões
    Operadores-> Aritmeticos Agrupamento atribuição Encadeamento Incrementar e Decrementar
    Aritmeticos + , -, * , / ,%
    Agrupamento()
    Atribuição = , += , -= ,*= , /= e %= 
    Encadeamento . utilizado para encadear uma coisa com outra
    Incrementar ++ 
    Decrementar --
Expressões  
    Nada mais e do que as linhas de codigos.
Comentarios
    Linhas de codigo que serao ignoradas pelo interpretador
    // -> uma linha  /* */ -> varias Linhas    
Comparação de dados
    Sempre retornam um resultado boolean
    Operadores == E ===   != E !==  > >= < <=    
Operadores logicos
    E(AND) Ou(OR) Não(NOT)
    operador E so e verdadeiro se ambas as partes forem verdadeiras &&
    operador Ou verdadeiro se uma das partes for verdades  ||
    operador NOT nega a afirmação feita   !
Estrutura Condicionais IF e ELSE
    Permite criar blocos de codigo que vao ser executados somente quando uma determinada operação
    logica for verdadeira
    SE condição === true ENTAO faça algo
    Alem disso pode ser usado com o ELSE para acrescentar um bloco que vai ser executado somente quando essa 
    mesma operação logica for falsa
    SE condição === true ENTAO faça uma coisa SENÃO faça outra coisa 
Operador Ternario 
    const resultado = condicao ? resultado_verdadeiro : resultado_falso    
Switch
    Permite criar blocos condicionais como o IF, pórem com uma estrutura que avalia uma expressaõ e testa
    o resultado contra variaos casos , executando os casos correspondentes.
    Switch Expressão
     CASO a : faça uma coisa
     CASO b : faça outra coisa E PARE
     CASO c : faça mais outra coisa
     POR PADRÃO : faça algo sempre
While
    Estrutura de repetição serve para executar um mesmo bloco de codigo varias vezes
    O while serve para criar um laço de repetição que sera executado enquanto uma determinada condição for verdadeira
    O while e todas as outras estruturas de repetição que veremos aceitam o break para parar
    a repetição a qualquer momento.
    Atenção: é importante que sempre exista uma forma de condição se tornar falsa, ou então 
    o bloco ficara se repetinfo para sempre
    Esquanto condição FAÇA algo varias vezes 
Do While 
    O do while e muito parecido com o while porem ele garante que o bloco de codigo
    sera executado ppelo menos uma vez , mesmo que a condição seja falsa
    No  do while a primeira verificação da condição so acontece depois que o bloco foi executado uma vez
    FAÇA alguma coisa ENQUANTO condicao 
For 
    O for tambem serve para realizar repetições , porem com uma estutura de diferente do while e do do while
    Ele existe para abreviar o codigo em casos que seguem essa estrutura especifica
    PARA inicialização ; Condição;Finalização FAÇA alguma coisa
    Um exemplo comum de uso do for e quando queremos iterar um numero fixo de vezes , como uma vez para cada 
    letra de uma palavra , ou uma vez para cada item de uma lista.
    For(inicialização ; condição ; Finalização)  
Estrutura de dados
    São um modo particular de armazenar e organizar dados de modo que possam ser usados
    eficientemente, facilitando sua busca e modificação.
        Lista ligada
            Coleção ordenada de valores onde cada elemento aponta para o proximo.
        Array
            Coleção de elementos que podem ser identificados por indice.
        Fila(Queue)
            Coleção de elementos onde o primeiro elemento a ser retirado deve ser o primeiro elemento adicionado
            Tambem chamadas de listas FIFO (first-in / first-out, ou primeiro a entrar / primeiro a sair)
        Pilha(Stack)
            Coleção de elementos onde o primeiro elemento a ser retirado deve ser o ultimo elemento adicionado
            Tambem chamadas de listas LIFO(last-in/first-out,ou ultimo a entrar / primeiro a sair)
        Arvore(Tree)   
            Conjunto de elementos chamados de nós(ou nodes) organizados em uma estrutura hierarquica
            (não sequencial) ou seja, podendo esta "abaixo" ou "acima" de outros nós.
            Pensa em uma arvore genealogica, na estrutura das pastas no seu computador 
            ou na estrutura de uma pagina HTML.
        Estruturas de dados no js (e outras linguagens de alto - nivel)
            Listas(Arrays)
            Dicionarios(Objetos)
Array(Vetores)
    E uma estrutura de js para se trabalhar com todo tipo de lista
    Seus elementos são identificados por um indice inteiro começando pelo 0
    Pode armazenar qualquer tipo de dado e ter qualquer tamanho
    Pode ser criado e utilizado atraves de colchetes []
    Possuem funções para varios casos de uso 
Objetos    
    E uma estrutura do js para se trabalhar com dicionarios chave-valores
    O par chave valor em um objeto js e chamado de propriedade
    Diferente dos arrays seus elemetos não possuem nenhuma sequencial
    Uma propriedade tambem pode ter string numeros e booleanos como chave
    Uma propriedade pode armazenar qualquer tipo de dado como valor
    Pode ser criado atraves de chaves {} -> let objeto = {}
    Suas propriedades e funções podem ser referenciados por encadeamento com ponto '.' ou colchetes[]
                      Proxima aula -> Exercicio 7: Fila de espera